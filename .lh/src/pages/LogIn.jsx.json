{
    "sourceFile": "src/pages/LogIn.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1748691570677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748691582452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n };\r\n \r\n const LogIn = () => {\r\n   const [showPassword, setShowPassword] = useState(false);\r\n-  const [formData, setFormData] = useState({ email: 'moeed@mailinator.com', password: '' });\r\n+  const [formData, setFormData] = useState({ email: 'moeed@mailinator.com', password: '123456' });\r\n   const [error, setError] = useState(null);\r\n   const { user, logout } = useAuth();\r\n   const navigate = useNavigate();\r\n \r\n"
                }
            ],
            "date": 1748691570677,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect, useContext } from 'react';\r\nimport { Box, Button, TextField, Typography, InputAdornment, IconButton, Paper } from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport Logo from '../assets/logo.png';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport supabase from '../services/supabaseClient';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    return { user: null, logout: () => {} };\r\n  }\r\n  return context;\r\n};\r\n\r\nconst LogIn = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [formData, setFormData] = useState({ email: 'moeed@mailinator.com', password: '' });\r\n  const [error, setError] = useState(null);\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProfileAndRedirect = async () => {\r\n      if (user) {\r\n        const { data: profile, error } = await supabase\r\n          .from('profiles')\r\n          .select('role')\r\n          .eq('id', user.id)\r\n          .single();\r\n\r\n        if (error) {\r\n          setError('Failed to fetch user role.');\r\n        } else {\r\n          if (profile.role === 'admin') {\r\n            navigate('/admin');\r\n          } else {\r\n            navigate('/dashboard');\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchProfileAndRedirect();\r\n  }, [user, navigate]);\r\n\r\n  const togglePasswordVisibility = () => setShowPassword(prev => !prev);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    try {\r\n      const { data, error } = await supabase.auth.signInWithPassword({\r\n        email: formData.email.trim().toLowerCase(),\r\n        password: formData.password\r\n      });\r\n\r\n      if (error) {\r\n        setError(error.message);\r\n      } else {\r\n        const userId = data.user.id;\r\n\r\n        const { data: profile, error: profileError } = await supabase\r\n          .from('profiles')\r\n          .select('role')\r\n          .eq('id', userId)\r\n          .single();\r\n\r\n        if (profileError) {\r\n          setError('Unable to fetch user role');\r\n        } else {\r\n          if (profile.role === 'admin') {\r\n            navigate('/admin', { replace: true });\r\n          } else {\r\n            navigate('/dashboard', { replace: true });\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError('An unexpected error occurred');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100vw', height: '100vh', overflow: 'hidden',\r\n        background: 'white',\r\n        display: 'flex', alignItems: 'center', justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Paper elevation={12} sx={{\r\n        p: 4, width: '100%', maxWidth: 500,\r\n        background: '#111', borderRadius: 3, border: '1px solid #FFD700',\r\n        color: '#fff', boxShadow: '0 8px 24px rgba(255, 215, 0, 0.25)'\r\n      }}>\r\n        <Box sx={{ textAlign: 'center', mb: 3 }}>\r\n          <img src={Logo} alt=\"Logo\" style={{ width: 70 }} />\r\n          <Typography variant=\"h5\" sx={{ color: '#FFD700', mt: 2, fontWeight: 'bold' }}>\r\n            Welcome Back\r\n          </Typography>\r\n        </Box>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            fullWidth margin=\"normal\" variant=\"filled\"\r\n            value={formData.email} onChange={handleChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <EmailIcon sx={{ color: '#FFD700' }} />\r\n                </InputAdornment>\r\n              ),\r\n              sx: { bgcolor: '#222', color: '#fff' }\r\n            }}\r\n            InputLabelProps={{ sx: { color: '#FFD700' } }}\r\n          />\r\n\r\n          <TextField\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            fullWidth margin=\"normal\" variant=\"filled\"\r\n            value={formData.password} onChange={handleChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <LockIcon sx={{ color: '#FFD700' }} />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={togglePasswordVisibility}>\r\n                    {showPassword\r\n                      ? <Visibility sx={{ color: '#FFD700' }} />\r\n                      : <VisibilityOff sx={{ color: '#FFD700' }} />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n              sx: { bgcolor: '#222', color: '#fff' }\r\n            }}\r\n            InputLabelProps={{ sx: { color: '#FFD700' } }}\r\n          />\r\n\r\n          {error && <Typography sx={{ color: 'red', textAlign: 'center' }}>{error}</Typography>}\r\n\r\n          <Button\r\n            type=\"submit\" fullWidth variant=\"contained\"\r\n            sx={{\r\n              mt: 3, bgcolor: '#FFD700', color: '#000', fontWeight: 'bold',\r\n              '&:hover': { bgcolor: '#e6c200' }\r\n            }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n\r\n        <Typography sx={{ mt: 2, color: '#ccc', textAlign: 'center' }}>\r\n          Don't have an account? <Link to=\"/signup\" style={{ color: '#FFD700', textDecoration: 'none' }}>Sign Up</Link>\r\n        </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n"
        }
    ]
}